name: Build & Deploy

on:
  push:
    branches: [ gh-actions-tests ]
  pull_request:
    branches: [ gh-actions-tests ]
  workflow_dispatch:


jobs:
  test-backend:
    name: Test backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: dbMDS
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: 1234
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    #      redis:
    #        image: redis
    #        options: >-
    #          --health-cmd "redis-cli ping"
    #          --health-interval 10s
    #          --health-timeout 5s
    #          --health-retries 5
    #        ports:
    #          - 6379:6379
    #
    #    strategy:
    #      matrix:
    #        node-version: [ 16.x, 18.x ]
    #        python-version: [ 3.10 ]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup DB
        run: |
          psql -U runner -d dbMDS -a -f sql/users.sql 

      - name: Install dependencies Python
        working-directory: backend-python
        run: |
          pip install -r requirements.txt

      - name: Install dependencies JS
        run: |
          npm ci --omit=dev

      - name: Setup DB
        run: |
          node sql/client.js

      - name: Start server Python
        working-directory: backend-python
        run: |
          (nohup python3 run.py 0<&- &>/dev/null &) && echo "Done!"

      - name: Start server JS
        run: |
          ls
          yarn
          (nohup npm run dev 0<&- &>/dev/null &) && echo "Done!"

      - name: Run Tests
        run: |
          ls
          npx ts-mocha -p tsconfig.json test/authentication.ts



#  build-frontend:
#    name: Build frontend
#    runs-on: ubuntu-latest
#    if: (contains(github.event.commits.*.added, 'frontend') || contains(github.event.commits.*.modified, 'frontend'))
#    defaults:
#      run:
#        working-directory: frontend
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#      - name: List files in the repository
#        run: |
#          ls ${{ github.workspace }}
#      - name: Install dependencies
#        run: npm ci
#      - name: Build dependencies
#        run: npm run build
#      - name: Archive production artifacts
#        uses: actions/upload-artifact@main
#        with:
#          name: static-site
#          path: ./frontend/dist/proiect-mdsangular
#
#  deploy-frontend:
#    name: Deploy frontend
#    runs-on: ubuntu-latest
#    needs: build-frontend
#    steps:
#      #      - name: Checkout repository
#      #        uses: actions/checkout@main
#      - name: Download production artifacts
#        uses: actions/download-artifact@main
#        with:
#          name: static-site
#      - name: Test artifact download
#        run: ls -R
#      - name: SFTP Deploy
#        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
#        with:
#          username: root
#          server: promeret.social
#          port: 22 # default is 22
#          password: ${{ secrets.SSH_PRIVATE_KEY }}
#
#
#          # will put all file under this path
#          local_path: ./
#          # files will copy to under remote_path
#          remote_path: /var/www/html
#
#          # sftp args
#          args: '-o ConnectTimeout=5'
#
#  deploy-backend:
#    name: Deploy backend
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@main
#      - name: SFTP Deploy
#        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
#        with:
#          username: root
#          server: promeret.social
#          port: 22 # default is 22
#          password: ${{ secrets.SSH_PRIVATE_KEY }}
#
#          # will put all file under this path
#          local_path: ./backend/*
#          # files will copy to under remote_path
#          remote_path: /root/BackEnd
#
#          # sftp args
#          args: '-o ConnectTimeout=5'
#
#  deploy-backend-python:
#    name: Deploy backend-python
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@main
#      - name: SFTP Deploy
#        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
#        with:
#          username: root
#          server: promeret.social
#          port: 22 # default is 22
#          password: ${{ secrets.SSH_PRIVATE_KEY }}
#
#          # will put all file under this path
#          local_path: ./backend-python/*
#          # files will copy to under remote_path
#          remote_path: /root/BackEndPython
#
#          # sftp args
#          args: '-o ConnectTimeout=5'
#
#  run:
#    name: Run backend
#    runs-on: ubuntu-latest
#    needs: [deploy-backend, deploy-backend-python]
#    steps:
#      - name: Run
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: promeret.social
#          username: root
#          password: ${{ secrets.SSH_PRIVATE_KEY }}
#          command_timeout: 60s
#          port: 22
#          script: |
#            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
#            export OPENAI_ORG_ID=${{ secrets.OPENAI_ORG_ID }}
#            cd /root/BackEndPython
#            pip install -r requirements.txt
#            (nohup python3 run.py 0<&- &>/dev/null &) && echo "Done!"
#            cd /root/BackEnd
#            ./shutdown.sh
#            npm install
#            (nohup ./startup.sh 0<&- &>/dev/null &) && echo "Done!"